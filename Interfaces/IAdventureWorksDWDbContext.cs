// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Interfaces
{
    using Entities;
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;

    public interface IAdventureWorksDWDbContext : System.IDisposable
    {
        System.Data.Entity.DbSet<DatabaseLog> DatabaseLogs { get; set; } // DatabaseLog
        System.Data.Entity.DbSet<DimAccount> DimAccounts { get; set; } // DimAccount
        System.Data.Entity.DbSet<DimCurrency> DimCurrencies { get; set; } // DimCurrency
        System.Data.Entity.DbSet<DimCustomer> DimCustomers { get; set; } // DimCustomer
        System.Data.Entity.DbSet<DimDate> DimDates { get; set; } // DimDate
        System.Data.Entity.DbSet<DimDepartmentGroup> DimDepartmentGroups { get; set; } // DimDepartmentGroup
        System.Data.Entity.DbSet<DimEmployee> DimEmployees { get; set; } // DimEmployee
        System.Data.Entity.DbSet<DimGeography> DimGeographies { get; set; } // DimGeography
        System.Data.Entity.DbSet<DimOrganization> DimOrganizations { get; set; } // DimOrganization
        System.Data.Entity.DbSet<DimProduct> DimProducts { get; set; } // DimProduct
        System.Data.Entity.DbSet<DimProductCategory> DimProductCategories { get; set; } // DimProductCategory
        System.Data.Entity.DbSet<DimProductSubcategory> DimProductSubcategories { get; set; } // DimProductSubcategory
        System.Data.Entity.DbSet<DimPromotion> DimPromotions { get; set; } // DimPromotion
        System.Data.Entity.DbSet<DimReseller> DimResellers { get; set; } // DimReseller
        System.Data.Entity.DbSet<DimSalesReason> DimSalesReasons { get; set; } // DimSalesReason
        System.Data.Entity.DbSet<DimSalesTerritory> DimSalesTerritories { get; set; } // DimSalesTerritory
        System.Data.Entity.DbSet<DimScenario> DimScenarios { get; set; } // DimScenario
        System.Data.Entity.DbSet<FactAdditionalInternationalProductDescription> FactAdditionalInternationalProductDescriptions { get; set; } // FactAdditionalInternationalProductDescription
        System.Data.Entity.DbSet<FactCallCenter> FactCallCenters { get; set; } // FactCallCenter
        System.Data.Entity.DbSet<FactCurrencyRate> FactCurrencyRates { get; set; } // FactCurrencyRate
        System.Data.Entity.DbSet<FactFinance> FactFinances { get; set; } // FactFinance
        System.Data.Entity.DbSet<FactInternetSale> FactInternetSales { get; set; } // FactInternetSales
        System.Data.Entity.DbSet<FactInternetSalesReason> FactInternetSalesReasons { get; set; } // FactInternetSalesReason
        System.Data.Entity.DbSet<FactProductInventory> FactProductInventories { get; set; } // FactProductInventory
        System.Data.Entity.DbSet<FactResellerSale> FactResellerSales { get; set; } // FactResellerSales
        System.Data.Entity.DbSet<FactSalesQuota> FactSalesQuotas { get; set; } // FactSalesQuota
        System.Data.Entity.DbSet<FactSurveyResponse> FactSurveyResponses { get; set; } // FactSurveyResponse
        System.Data.Entity.DbSet<ProspectiveBuyer> ProspectiveBuyers { get; set; } // ProspectiveBuyer
        System.Data.Entity.DbSet<VAssocSeqLineItem> VAssocSeqLineItems { get; set; } // vAssocSeqLineItems
        System.Data.Entity.DbSet<VAssocSeqOrder> VAssocSeqOrders { get; set; } // vAssocSeqOrders
        System.Data.Entity.DbSet<VDmPrep> VDmPreps { get; set; } // vDMPrep
        System.Data.Entity.DbSet<VTargetMail> VTargetMails { get; set; } // vTargetMail
        System.Data.Entity.DbSet<VTimeSery> VTimeSeries { get; set; } // vTimeSeries

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

}
// </auto-generated>
