// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Entities
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;

    // DimCurrency
    [Table("DimCurrency", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class DimCurrency
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"CurrencyKey", Order = 1, TypeName = "int")]
        [Index(@"PK_DimCurrency_CurrencyKey", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Currency key")]
        public int CurrencyKey { get; set; } // CurrencyKey (Primary key)

        [Column(@"CurrencyAlternateKey", Order = 2, TypeName = "nchar")]
        [Index(@"AK_DimCurrency_CurrencyAlternateKey", 1, IsUnique = true, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Currency alternate key")]
        public string CurrencyAlternateKey { get; set; } // CurrencyAlternateKey (length: 3)

        [Column(@"CurrencyName", Order = 3, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Currency name")]
        public string CurrencyName { get; set; } // CurrencyName (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child DimOrganizations where [DimOrganization].[CurrencyKey] point to this entity (FK_DimOrganization_DimCurrency)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<DimOrganization> DimOrganizations { get; set; } // DimOrganization.FK_DimOrganization_DimCurrency
        /// <summary>
        /// Child FactCurrencyRates where [FactCurrencyRate].[CurrencyKey] point to this entity (FK_FactCurrencyRate_DimCurrency)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<FactCurrencyRate> FactCurrencyRates { get; set; } // FactCurrencyRate.FK_FactCurrencyRate_DimCurrency
        /// <summary>
        /// Child FactInternetSales where [FactInternetSales].[CurrencyKey] point to this entity (FK_FactInternetSales_DimCurrency)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<FactInternetSale> FactInternetSales { get; set; } // FactInternetSales.FK_FactInternetSales_DimCurrency
        /// <summary>
        /// Child FactResellerSales where [FactResellerSales].[CurrencyKey] point to this entity (FK_FactResellerSales_DimCurrency)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<FactResellerSale> FactResellerSales { get; set; } // FactResellerSales.FK_FactResellerSales_DimCurrency

        public DimCurrency()
        {
            DimOrganizations = new System.Collections.Generic.List<DimOrganization>();
            FactCurrencyRates = new System.Collections.Generic.List<FactCurrencyRate>();
            FactInternetSales = new System.Collections.Generic.List<FactInternetSale>();
            FactResellerSales = new System.Collections.Generic.List<FactResellerSale>();
        }
    }

}
// </auto-generated>
