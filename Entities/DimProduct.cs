// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Entities
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;

    // DimProduct
    [Table("DimProduct", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class DimProduct
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ProductKey", Order = 1, TypeName = "int")]
        [Index(@"PK_DimProduct_ProductKey", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product key")]
        public int ProductKey { get; set; } // ProductKey (Primary key)

        [Column(@"ProductAlternateKey", Order = 2, TypeName = "nvarchar")]
        [Index(@"AK_DimProduct_ProductAlternateKey_StartDate", 1, IsUnique = true, IsClustered = false)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Product alternate key")]
        public string ProductAlternateKey { get; set; } // ProductAlternateKey (length: 25)

        [Column(@"ProductSubcategoryKey", Order = 3, TypeName = "int")]
        [Display(Name = "Product subcategory key")]
        public int? ProductSubcategoryKey { get; set; } // ProductSubcategoryKey

        [Column(@"WeightUnitMeasureCode", Order = 4, TypeName = "nchar")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Weight unit measure code")]
        public string WeightUnitMeasureCode { get; set; } // WeightUnitMeasureCode (length: 3)

        [Column(@"SizeUnitMeasureCode", Order = 5, TypeName = "nchar")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Size unit measure code")]
        public string SizeUnitMeasureCode { get; set; } // SizeUnitMeasureCode (length: 3)

        [Column(@"EnglishProductName", Order = 6, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "English product name")]
        public string EnglishProductName { get; set; } // EnglishProductName (length: 50)

        [Column(@"SpanishProductName", Order = 7, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Spanish product name")]
        public string SpanishProductName { get; set; } // SpanishProductName (length: 50)

        [Column(@"FrenchProductName", Order = 8, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "French product name")]
        public string FrenchProductName { get; set; } // FrenchProductName (length: 50)

        [Column(@"StandardCost", Order = 9, TypeName = "money")]
        [DataType(DataType.Currency)]
        [Display(Name = "Standard cost")]
        public decimal? StandardCost { get; set; } // StandardCost

        [Column(@"FinishedGoodsFlag", Order = 10, TypeName = "bit")]
        [Required]
        [Display(Name = "Finished goods flag")]
        public bool FinishedGoodsFlag { get; set; } // FinishedGoodsFlag

        [Column(@"Color", Order = 11, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Color")]
        public string Color { get; set; } // Color (length: 15)

        [Column(@"SafetyStockLevel", Order = 12, TypeName = "smallint")]
        [Display(Name = "Safety stock level")]
        public short? SafetyStockLevel { get; set; } // SafetyStockLevel

        [Column(@"ReorderPoint", Order = 13, TypeName = "smallint")]
        [Display(Name = "Reorder point")]
        public short? ReorderPoint { get; set; } // ReorderPoint

        [Column(@"ListPrice", Order = 14, TypeName = "money")]
        [DataType(DataType.Currency)]
        [Display(Name = "List price")]
        public decimal? ListPrice { get; set; } // ListPrice

        [Column(@"Size", Order = 15, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Size")]
        public string Size { get; set; } // Size (length: 50)

        [Column(@"SizeRange", Order = 16, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Size range")]
        public string SizeRange { get; set; } // SizeRange (length: 50)

        [Column(@"Weight", Order = 17, TypeName = "float")]
        [Display(Name = "Weight")]
        public double? Weight { get; set; } // Weight

        [Column(@"DaysToManufacture", Order = 18, TypeName = "int")]
        [Display(Name = "Days to manufacture")]
        public int? DaysToManufacture { get; set; } // DaysToManufacture

        [Column(@"ProductLine", Order = 19, TypeName = "nchar")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Product line")]
        public string ProductLine { get; set; } // ProductLine (length: 2)

        [Column(@"DealerPrice", Order = 20, TypeName = "money")]
        [DataType(DataType.Currency)]
        [Display(Name = "Dealer price")]
        public decimal? DealerPrice { get; set; } // DealerPrice

        [Column(@"Class", Order = 21, TypeName = "nchar")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Class")]
        public string Class { get; set; } // Class (length: 2)

        [Column(@"Style", Order = 22, TypeName = "nchar")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Style")]
        public string Style { get; set; } // Style (length: 2)

        [Column(@"ModelName", Order = 23, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Model name")]
        public string ModelName { get; set; } // ModelName (length: 50)

        [Column(@"LargePhoto", Order = 24, TypeName = "varbinary(max)")]
        [Display(Name = "Large photo")]
        public byte[] LargePhoto { get; set; } // LargePhoto

        [Column(@"EnglishDescription", Order = 25, TypeName = "nvarchar")]
        [MaxLength(400)]
        [StringLength(400)]
        [Display(Name = "English description")]
        public string EnglishDescription { get; set; } // EnglishDescription (length: 400)

        [Column(@"FrenchDescription", Order = 26, TypeName = "nvarchar")]
        [MaxLength(400)]
        [StringLength(400)]
        [Display(Name = "French description")]
        public string FrenchDescription { get; set; } // FrenchDescription (length: 400)

        [Column(@"ChineseDescription", Order = 27, TypeName = "nvarchar")]
        [MaxLength(400)]
        [StringLength(400)]
        [Display(Name = "Chinese description")]
        public string ChineseDescription { get; set; } // ChineseDescription (length: 400)

        [Column(@"ArabicDescription", Order = 28, TypeName = "nvarchar")]
        [MaxLength(400)]
        [StringLength(400)]
        [Display(Name = "Arabic description")]
        public string ArabicDescription { get; set; } // ArabicDescription (length: 400)

        [Column(@"HebrewDescription", Order = 29, TypeName = "nvarchar")]
        [MaxLength(400)]
        [StringLength(400)]
        [Display(Name = "Hebrew description")]
        public string HebrewDescription { get; set; } // HebrewDescription (length: 400)

        [Column(@"ThaiDescription", Order = 30, TypeName = "nvarchar")]
        [MaxLength(400)]
        [StringLength(400)]
        [Display(Name = "Thai description")]
        public string ThaiDescription { get; set; } // ThaiDescription (length: 400)

        [Column(@"GermanDescription", Order = 31, TypeName = "nvarchar")]
        [MaxLength(400)]
        [StringLength(400)]
        [Display(Name = "German description")]
        public string GermanDescription { get; set; } // GermanDescription (length: 400)

        [Column(@"JapaneseDescription", Order = 32, TypeName = "nvarchar")]
        [MaxLength(400)]
        [StringLength(400)]
        [Display(Name = "Japanese description")]
        public string JapaneseDescription { get; set; } // JapaneseDescription (length: 400)

        [Column(@"TurkishDescription", Order = 33, TypeName = "nvarchar")]
        [MaxLength(400)]
        [StringLength(400)]
        [Display(Name = "Turkish description")]
        public string TurkishDescription { get; set; } // TurkishDescription (length: 400)

        [Column(@"StartDate", Order = 34, TypeName = "datetime")]
        [Index(@"AK_DimProduct_ProductAlternateKey_StartDate", 2, IsUnique = true, IsClustered = false)]
        [DataType(DataType.DateTime)]
        [Display(Name = "Start date")]
        public System.DateTime? StartDate { get; set; } // StartDate

        [Column(@"EndDate", Order = 35, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "End date")]
        public System.DateTime? EndDate { get; set; } // EndDate

        [Column(@"Status", Order = 36, TypeName = "nvarchar")]
        [MaxLength(7)]
        [StringLength(7)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 7)

        // Reverse navigation

        /// <summary>
        /// Child FactInternetSales where [FactInternetSales].[ProductKey] point to this entity (FK_FactInternetSales_DimProduct)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<FactInternetSale> FactInternetSales { get; set; } // FactInternetSales.FK_FactInternetSales_DimProduct
        /// <summary>
        /// Child FactProductInventories where [FactProductInventory].[ProductKey] point to this entity (FK_FactProductInventory_DimProduct)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<FactProductInventory> FactProductInventories { get; set; } // FactProductInventory.FK_FactProductInventory_DimProduct
        /// <summary>
        /// Child FactResellerSales where [FactResellerSales].[ProductKey] point to this entity (FK_FactResellerSales_DimProduct)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<FactResellerSale> FactResellerSales { get; set; } // FactResellerSales.FK_FactResellerSales_DimProduct

        // Foreign keys

        /// <summary>
        /// Parent DimProductSubcategory pointed by [DimProduct].([ProductSubcategoryKey]) (FK_DimProduct_DimProductSubcategory)
        /// </summary>
        [ForeignKey("ProductSubcategoryKey")] public virtual DimProductSubcategory DimProductSubcategory { get; set; } // FK_DimProduct_DimProductSubcategory

        public DimProduct()
        {
            FactInternetSales = new System.Collections.Generic.List<FactInternetSale>();
            FactProductInventories = new System.Collections.Generic.List<FactProductInventory>();
            FactResellerSales = new System.Collections.Generic.List<FactResellerSale>();
        }
    }

}
// </auto-generated>
