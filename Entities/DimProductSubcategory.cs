// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Entities
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;

    // DimProductSubcategory
    [Table("DimProductSubcategory", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class DimProductSubcategory
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ProductSubcategoryKey", Order = 1, TypeName = "int")]
        [Index(@"PK_DimProductSubcategory_ProductSubcategoryKey", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product subcategory key")]
        public int ProductSubcategoryKey { get; set; } // ProductSubcategoryKey (Primary key)

        [Column(@"ProductSubcategoryAlternateKey", Order = 2, TypeName = "int")]
        [Index(@"AK_DimProductSubcategory_ProductSubcategoryAlternateKey", 1, IsUnique = true, IsClustered = false)]
        [Display(Name = "Product subcategory alternate key")]
        public int? ProductSubcategoryAlternateKey { get; set; } // ProductSubcategoryAlternateKey

        [Column(@"EnglishProductSubcategoryName", Order = 3, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "English product subcategory name")]
        public string EnglishProductSubcategoryName { get; set; } // EnglishProductSubcategoryName (length: 50)

        [Column(@"SpanishProductSubcategoryName", Order = 4, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Spanish product subcategory name")]
        public string SpanishProductSubcategoryName { get; set; } // SpanishProductSubcategoryName (length: 50)

        [Column(@"FrenchProductSubcategoryName", Order = 5, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "French product subcategory name")]
        public string FrenchProductSubcategoryName { get; set; } // FrenchProductSubcategoryName (length: 50)

        [Column(@"ProductCategoryKey", Order = 6, TypeName = "int")]
        [Display(Name = "Product category key")]
        public int? ProductCategoryKey { get; set; } // ProductCategoryKey

        // Reverse navigation

        /// <summary>
        /// Child DimProducts where [DimProduct].[ProductSubcategoryKey] point to this entity (FK_DimProduct_DimProductSubcategory)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<DimProduct> DimProducts { get; set; } // DimProduct.FK_DimProduct_DimProductSubcategory

        // Foreign keys

        /// <summary>
        /// Parent DimProductCategory pointed by [DimProductSubcategory].([ProductCategoryKey]) (FK_DimProductSubcategory_DimProductCategory)
        /// </summary>
        [ForeignKey("ProductCategoryKey")] public virtual DimProductCategory DimProductCategory { get; set; } // FK_DimProductSubcategory_DimProductCategory

        public DimProductSubcategory()
        {
            DimProducts = new System.Collections.Generic.List<DimProduct>();
        }
    }

}
// </auto-generated>
