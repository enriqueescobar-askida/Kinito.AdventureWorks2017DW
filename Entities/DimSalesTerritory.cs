// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Entities
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;

    // DimSalesTerritory
    [Table("DimSalesTerritory", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class DimSalesTerritory
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"SalesTerritoryKey", Order = 1, TypeName = "int")]
        [Index(@"PK_DimSalesTerritory_SalesTerritoryKey", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Sales territory key")]
        public int SalesTerritoryKey { get; set; } // SalesTerritoryKey (Primary key)

        [Column(@"SalesTerritoryAlternateKey", Order = 2, TypeName = "int")]
        [Index(@"AK_DimSalesTerritory_SalesTerritoryAlternateKey", 1, IsUnique = true, IsClustered = false)]
        [Display(Name = "Sales territory alternate key")]
        public int? SalesTerritoryAlternateKey { get; set; } // SalesTerritoryAlternateKey

        [Column(@"SalesTerritoryRegion", Order = 3, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Sales territory region")]
        public string SalesTerritoryRegion { get; set; } // SalesTerritoryRegion (length: 50)

        [Column(@"SalesTerritoryCountry", Order = 4, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Sales territory country")]
        public string SalesTerritoryCountry { get; set; } // SalesTerritoryCountry (length: 50)

        [Column(@"SalesTerritoryGroup", Order = 5, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Sales territory group")]
        public string SalesTerritoryGroup { get; set; } // SalesTerritoryGroup (length: 50)

        [Column(@"SalesTerritoryImage", Order = 6, TypeName = "varbinary(max)")]
        [Display(Name = "Sales territory image")]
        public byte[] SalesTerritoryImage { get; set; } // SalesTerritoryImage

        // Reverse navigation

        /// <summary>
        /// Child DimEmployees where [DimEmployee].[SalesTerritoryKey] point to this entity (FK_DimEmployee_DimSalesTerritory)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<DimEmployee> DimEmployees { get; set; } // DimEmployee.FK_DimEmployee_DimSalesTerritory
        /// <summary>
        /// Child DimGeographies where [DimGeography].[SalesTerritoryKey] point to this entity (FK_DimGeography_DimSalesTerritory)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<DimGeography> DimGeographies { get; set; } // DimGeography.FK_DimGeography_DimSalesTerritory
        /// <summary>
        /// Child FactInternetSales where [FactInternetSales].[SalesTerritoryKey] point to this entity (FK_FactInternetSales_DimSalesTerritory)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<FactInternetSale> FactInternetSales { get; set; } // FactInternetSales.FK_FactInternetSales_DimSalesTerritory
        /// <summary>
        /// Child FactResellerSales where [FactResellerSales].[SalesTerritoryKey] point to this entity (FK_FactResellerSales_DimSalesTerritory)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<FactResellerSale> FactResellerSales { get; set; } // FactResellerSales.FK_FactResellerSales_DimSalesTerritory

        public DimSalesTerritory()
        {
            DimEmployees = new System.Collections.Generic.List<DimEmployee>();
            DimGeographies = new System.Collections.Generic.List<DimGeography>();
            FactInternetSales = new System.Collections.Generic.List<FactInternetSale>();
            FactResellerSales = new System.Collections.Generic.List<FactResellerSale>();
        }
    }

}
// </auto-generated>
