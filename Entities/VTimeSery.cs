// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Entities
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;

    // vTimeSeries
    [Table("vTimeSeries", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class VTimeSery
    {
        [Column(@"ModelRegion", Order = 1, TypeName = "nvarchar")]
        [MaxLength(56)]
        [StringLength(56)]
        [Display(Name = "Model region")]
        public string ModelRegion { get; set; } // ModelRegion (length: 56)

        [Column(@"TimeIndex", Order = 2, TypeName = "int")]
        [Display(Name = "Time index")]
        public int? TimeIndex { get; set; } // TimeIndex

        [Column(@"Quantity", Order = 3, TypeName = "int")]
        [Display(Name = "Quantity")]
        public int? Quantity { get; set; } // Quantity

        [Column(@"Amount", Order = 4, TypeName = "money")]
        [DataType(DataType.Currency)]
        [Display(Name = "Amount")]
        public decimal? Amount { get; set; } // Amount

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"CalendarYear", Order = 5, TypeName = "smallint")]
        [Required]
        [Key]
        [Display(Name = "Calendar year")]
        public short CalendarYear { get; set; } // CalendarYear (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Month", Order = 6, TypeName = "tinyint")]
        [Required]
        [Key]
        [Display(Name = "Month")]
        public byte Month { get; set; } // Month (Primary key)

        [Column(@"ReportingDate", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Reporting date")]
        public System.DateTime? ReportingDate { get; set; } // ReportingDate
    }

}
// </auto-generated>
