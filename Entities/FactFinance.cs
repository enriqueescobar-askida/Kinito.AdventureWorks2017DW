// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Entities
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;

    // FactFinance
    [Table("FactFinance", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class FactFinance
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"FinanceKey", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Finance key")]
        public int FinanceKey { get; set; } // FinanceKey (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"DateKey", Order = 2, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Date key")]
        public int DateKey { get; set; } // DateKey (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"OrganizationKey", Order = 3, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Organization key")]
        public int OrganizationKey { get; set; } // OrganizationKey (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"DepartmentGroupKey", Order = 4, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Department group key")]
        public int DepartmentGroupKey { get; set; } // DepartmentGroupKey (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ScenarioKey", Order = 5, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Scenario key")]
        public int ScenarioKey { get; set; } // ScenarioKey (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"AccountKey", Order = 6, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Account key")]
        public int AccountKey { get; set; } // AccountKey (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Amount", Order = 7, TypeName = "float")]
        [Required]
        [Key]
        [Display(Name = "Amount")]
        public double Amount { get; set; } // Amount (Primary key)

        [Column(@"Date", Order = 8, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Date")]
        public System.DateTime? Date { get; set; } // Date

        // Foreign keys

        /// <summary>
        /// Parent DimAccount pointed by [FactFinance].([AccountKey]) (FK_FactFinance_DimAccount)
        /// </summary>
        [ForeignKey("AccountKey"), Required] public virtual DimAccount DimAccount { get; set; } // FK_FactFinance_DimAccount

        /// <summary>
        /// Parent DimDate pointed by [FactFinance].([DateKey]) (FK_FactFinance_DimDate)
        /// </summary>
        [ForeignKey("DateKey"), Required] public virtual DimDate DimDate { get; set; } // FK_FactFinance_DimDate

        /// <summary>
        /// Parent DimDepartmentGroup pointed by [FactFinance].([DepartmentGroupKey]) (FK_FactFinance_DimDepartmentGroup)
        /// </summary>
        [ForeignKey("DepartmentGroupKey"), Required] public virtual DimDepartmentGroup DimDepartmentGroup { get; set; } // FK_FactFinance_DimDepartmentGroup

        /// <summary>
        /// Parent DimOrganization pointed by [FactFinance].([OrganizationKey]) (FK_FactFinance_DimOrganization)
        /// </summary>
        [ForeignKey("OrganizationKey"), Required] public virtual DimOrganization DimOrganization { get; set; } // FK_FactFinance_DimOrganization

        /// <summary>
        /// Parent DimScenario pointed by [FactFinance].([ScenarioKey]) (FK_FactFinance_DimScenario)
        /// </summary>
        [ForeignKey("ScenarioKey"), Required] public virtual DimScenario DimScenario { get; set; } // FK_FactFinance_DimScenario
    }

}
// </auto-generated>
