// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Entities
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;

    // DimOrganization
    [Table("DimOrganization", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class DimOrganization
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"OrganizationKey", Order = 1, TypeName = "int")]
        [Index(@"PK_DimOrganization", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Organization key")]
        public int OrganizationKey { get; set; } // OrganizationKey (Primary key)

        [Column(@"ParentOrganizationKey", Order = 2, TypeName = "int")]
        [Display(Name = "Parent organization key")]
        public int? ParentOrganizationKey { get; set; } // ParentOrganizationKey

        [Column(@"PercentageOfOwnership", Order = 3, TypeName = "nvarchar")]
        [MaxLength(16)]
        [StringLength(16)]
        [Display(Name = "Percentage of ownership")]
        public string PercentageOfOwnership { get; set; } // PercentageOfOwnership (length: 16)

        [Column(@"OrganizationName", Order = 4, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Organization name")]
        public string OrganizationName { get; set; } // OrganizationName (length: 50)

        [Column(@"CurrencyKey", Order = 5, TypeName = "int")]
        [Display(Name = "Currency key")]
        public int? CurrencyKey { get; set; } // CurrencyKey

        // Reverse navigation

        /// <summary>
        /// Child DimOrganizations where [DimOrganization].[ParentOrganizationKey] point to this entity (FK_DimOrganization_DimOrganization)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<DimOrganization> DimOrganizations { get; set; } // DimOrganization.FK_DimOrganization_DimOrganization
        /// <summary>
        /// Child FactFinances where [FactFinance].[OrganizationKey] point to this entity (FK_FactFinance_DimOrganization)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<FactFinance> FactFinances { get; set; } // FactFinance.FK_FactFinance_DimOrganization

        // Foreign keys

        /// <summary>
        /// Parent DimCurrency pointed by [DimOrganization].([CurrencyKey]) (FK_DimOrganization_DimCurrency)
        /// </summary>
        [ForeignKey("CurrencyKey")] public virtual DimCurrency DimCurrency { get; set; } // FK_DimOrganization_DimCurrency

        /// <summary>
        /// Parent DimOrganization pointed by [DimOrganization].([ParentOrganizationKey]) (FK_DimOrganization_DimOrganization)
        /// </summary>
        [ForeignKey("ParentOrganizationKey")] public virtual DimOrganization DimOrganization_ParentOrganizationKey { get; set; } // FK_DimOrganization_DimOrganization

        public DimOrganization()
        {
            DimOrganizations = new System.Collections.Generic.List<DimOrganization>();
            FactFinances = new System.Collections.Generic.List<FactFinance>();
        }
    }

}
// </auto-generated>
