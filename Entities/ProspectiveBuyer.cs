// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Entities
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;

    // ProspectiveBuyer
    [Table("ProspectiveBuyer", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class ProspectiveBuyer
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ProspectiveBuyerKey", Order = 1, TypeName = "int")]
        [Index(@"PK_ProspectiveBuyer_ProspectiveBuyerKey", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Prospective buyer key")]
        public int ProspectiveBuyerKey { get; set; } // ProspectiveBuyerKey (Primary key)

        [Column(@"ProspectAlternateKey", Order = 2, TypeName = "nvarchar")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Prospect alternate key")]
        public string ProspectAlternateKey { get; set; } // ProspectAlternateKey (length: 15)

        [Column(@"FirstName", Order = 3, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "First name")]
        public string FirstName { get; set; } // FirstName (length: 50)

        [Column(@"MiddleName", Order = 4, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Middle name")]
        public string MiddleName { get; set; } // MiddleName (length: 50)

        [Column(@"LastName", Order = 5, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Last name")]
        public string LastName { get; set; } // LastName (length: 50)

        [Column(@"BirthDate", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Birth date")]
        public System.DateTime? BirthDate { get; set; } // BirthDate

        [Column(@"MaritalStatus", Order = 7, TypeName = "nchar")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Marital status")]
        public string MaritalStatus { get; set; } // MaritalStatus (length: 1)

        [Column(@"Gender", Order = 8, TypeName = "nvarchar")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Gender")]
        public string Gender { get; set; } // Gender (length: 1)

        [Column(@"EmailAddress", Order = 9, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [EmailAddress]
        [Display(Name = "Email address")]
        public string EmailAddress { get; set; } // EmailAddress (length: 50)

        [Column(@"YearlyIncome", Order = 10, TypeName = "money")]
        [DataType(DataType.Currency)]
        [Display(Name = "Yearly income")]
        public decimal? YearlyIncome { get; set; } // YearlyIncome

        [Column(@"TotalChildren", Order = 11, TypeName = "tinyint")]
        [Display(Name = "Total children")]
        public byte? TotalChildren { get; set; } // TotalChildren

        [Column(@"NumberChildrenAtHome", Order = 12, TypeName = "tinyint")]
        [Display(Name = "Number children at home")]
        public byte? NumberChildrenAtHome { get; set; } // NumberChildrenAtHome

        [Column(@"Education", Order = 13, TypeName = "nvarchar")]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Education")]
        public string Education { get; set; } // Education (length: 40)

        [Column(@"Occupation", Order = 14, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Occupation")]
        public string Occupation { get; set; } // Occupation (length: 100)

        [Column(@"HouseOwnerFlag", Order = 15, TypeName = "nchar")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "House owner flag")]
        public string HouseOwnerFlag { get; set; } // HouseOwnerFlag (length: 1)

        [Column(@"NumberCarsOwned", Order = 16, TypeName = "tinyint")]
        [Display(Name = "Number cars owned")]
        public byte? NumberCarsOwned { get; set; } // NumberCarsOwned

        [Column(@"AddressLine1", Order = 17, TypeName = "nvarchar")]
        [MaxLength(120)]
        [StringLength(120)]
        [Display(Name = "Address line 1")]
        public string AddressLine1 { get; set; } // AddressLine1 (length: 120)

        [Column(@"AddressLine2", Order = 18, TypeName = "nvarchar")]
        [MaxLength(120)]
        [StringLength(120)]
        [Display(Name = "Address line 2")]
        public string AddressLine2 { get; set; } // AddressLine2 (length: 120)

        [Column(@"City", Order = 19, TypeName = "nvarchar")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 30)

        [Column(@"StateProvinceCode", Order = 20, TypeName = "nvarchar")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "State province code")]
        public string StateProvinceCode { get; set; } // StateProvinceCode (length: 3)

        [Column(@"PostalCode", Order = 21, TypeName = "nvarchar")]
        [MaxLength(15)]
        [StringLength(15)]
        [DataType(DataType.PostalCode)]
        [Display(Name = "Postal code")]
        public string PostalCode { get; set; } // PostalCode (length: 15)

        [Column(@"Phone", Order = 22, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Phone]
        [Display(Name = "Phone")]
        public string Phone { get; set; } // Phone (length: 20)

        [Column(@"Salutation", Order = 23, TypeName = "nvarchar")]
        [MaxLength(8)]
        [StringLength(8)]
        [Display(Name = "Salutation")]
        public string Salutation { get; set; } // Salutation (length: 8)

        [Column(@"Unknown", Order = 24, TypeName = "int")]
        [Display(Name = "Unknown")]
        public int? Unknown { get; set; } // Unknown
    }

}
// </auto-generated>
